#Another approach to check the correctness of our model prediction is train/test split method
#Steps
#Step 1 - Split the dataset into two sets the training set and the testing set
#Step 2  - Train the model on training set
#Step 3 - Test the model on testing set
#In this approch we apply our model to the test data and compare the actual output with the predicted one.
#Since here we are using different data in our model for prediction it acts as a better way to judge our model accuracy than training our model with the same data
from sklearn.datasets import load_iris
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LogisticRegression
from sklearn import metrics

iris = load_iris()

X = iris.data
y = iris.target

logreg = LogisticRegression()
#test_size=0.4 means 40% of the data is assigned to testing data and remaining for training data.
#random_state=4 means dataset would be divided into same pieces every single time you run the program.
X_train, X_test, y_train, y_test = train_test_split(X,y,test_size=0.4, random_state=4)

#Training using training data
logreg.fit(X_train,y_train)
#Predicting on testing data
y_pred = logreg.predict(X_test)

print(metrics.accuracy_score(y_test,y_pred))

#checking if splitting is done properly
print(X_train.shape)
print(X_test.shape)
print(y_train.shape)
print(y_test.shape)